using System.Collections;

namespace SudokuSolver.Tests;

public class SudokuTestsData : IEnumerable<object?[]>
{
    public IEnumerator<object?[]> GetEnumerator()
    {
        yield return new object?[] {
            new int[]
            {
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                1, 2, 3, 4, 5, 6, 7, 8, 9,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                1, 1, 1, 1, 1, 1, 1, 1, 1
            },
            null
        };

        yield return new object?[] {
            new int[]
            {
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 1, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 1, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0
            },
            null
        };

        yield return new object?[] {
            new int[]
            {
                0, 0, 5, 1, 0, 0, 0, 7, 0,
                7, 3, 4, 0, 0, 8, 0, 0, 1,
                0, 0, 9, 7, 0, 0, 0, 3, 5,
                0, 2, 6, 8, 0, 1, 0, 4, 0,
                0, 0, 0, 0, 0, 0, 6, 2, 0,
                4, 0, 3, 0, 5, 6, 1, 9, 0,
                0, 6, 0, 4, 2, 7, 3, 1, 0,
                0, 0, 0, 0, 0, 3, 0, 5, 0,
                3, 4, 0, 9, 1, 0, 0, 8, 0
            },
            new int[]
            {
                6, 8, 5, 1, 3, 2, 9, 7, 4,
                7, 3, 4, 5, 9, 8, 2, 6, 1,
                2, 1, 9, 7, 6, 4, 8, 3, 5,
                9, 2, 6, 8, 7, 1, 5, 4, 3,
                8, 5, 1, 3, 4, 9, 6, 2, 7,
                4, 7, 3, 2, 5, 6, 1, 9, 8,
                5, 6, 8, 4, 2, 7, 3, 1, 9,
                1, 9, 7, 6, 8, 3, 4, 5, 2,
                3, 4, 2, 9, 1, 5, 7, 8, 6
            }
        };

        yield return new object[]
        {
            new int[]
            {
                9, 0, 0, 8, 0, 0, 5, 0, 0,
                4, 0, 0, 0, 0, 7, 0, 0, 2,
                0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 3, 6, 0, 0, 0, 0, 0, 0,
                0, 0, 4, 7, 0, 0, 0, 3, 0,
                5, 0, 0, 1, 0, 0, 4, 0, 0,
                7, 0, 0, 0, 0, 9, 8, 0, 0,
                6, 9, 0, 0, 0, 2, 0, 5, 0,
                0, 0, 0, 0, 0, 6, 3, 0, 0
            },
            new int[]
            {
                9, 6, 2, 8, 4, 1, 5, 7, 3,
                4, 5, 8, 6, 3, 7, 1, 9, 2,
                3, 1, 7, 2, 9, 5, 6, 8, 4,
                8, 3, 6, 9, 5, 4, 2, 1, 7,
                1, 2, 4, 7, 6, 8, 9, 3, 5,
                5, 7, 9, 1, 2, 3, 4, 6, 8,
                7, 4, 5, 3, 1, 9, 8, 2, 6,
                6, 9, 3, 4, 8, 2, 7, 5, 1,
                2, 8, 1, 5, 7, 6, 3, 4, 9
            }
        };
    }

    IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();
}
